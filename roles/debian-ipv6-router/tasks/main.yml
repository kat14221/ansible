---
# Role: debian-ipv6-router
# Configurar Debian como router IPv6 para 2025:DB8:101::/64
# Gateway LAN: {{ ipv6_address }}/{{ ipv6_prefix }} en {{ interface }}

# =========================
# PRE-APT: evitar cuelgues
# =========================
- name: Desactivar timers de apt durante el aprovisionamiento
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: stopped
    enabled: no
  loop:
    - apt-daily.timer
    - apt-daily-upgrade.timer
  ignore_errors: yes
  become: yes

- name: Enmascarar servicios que suelen bloquear apt
  ansible.builtin.systemd:
    name: "{{ item }}"
    masked: yes
  loop:
    - apt-daily.service
    - apt-daily-upgrade.service
    - unattended-upgrades.service
  ignore_errors: yes
  become: yes

- name: Esperar a que se liberen locks de dpkg/apt
  ansible.builtin.shell: |
    while fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do sleep 2; done
    while fuser /var/lib/apt/lists/lock >/dev/null 2>&1; do sleep 2; done
  changed_when: false
  become: yes

# =========================
# APT no-interactivo
# =========================
- name: Actualizar cache de paquetes (no interactivo, con lock_timeout)
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600
    lock_timeout: 600
  environment:
    DEBIAN_FRONTEND: noninteractive
    NEEDRESTART_MODE: a
    APT_LISTCHANGES_FRONTEND: none
    UCF_FORCE_CONFOLD: "1"
  register: apt_update_result
  until: apt_update_result is succeeded
  retries: 3
  delay: 8
  become: yes

- name: Instalar paquetes necesarios (sin recomendaciones)
  ansible.builtin.apt:
    name:
      - radvd               # RA para SLAAC
      - isc-dhcp-server     # DHCPv6
      - nftables            # firewall
      - tcpdump             # capturas
      - tshark              # análisis
      - net-tools
      - iproute2
      - curl
      - apache2             # HTTP de evidencia
      - vsftpd              # FTP de evidencia
      - bind9-dnsutils      # dig/nslookup
      - resolvconf
    state: present
    install_recommends: false
    lock_timeout: 600
  environment:
    DEBIAN_FRONTEND: noninteractive
    NEEDRESTART_MODE: a
  register: pkg_install
  until: pkg_install is succeeded
  retries: 3
  delay: 8
  become: yes

# =========================
# Kernel / IPv6
# =========================
- name: Habilitar IPv6 forwarding (global)
  ansible.builtin.sysctl:
    name: net.ipv6.conf.all.forwarding
    value: '1'
    state: present
    reload: yes
  become: yes

- name: Deshabilitar aceptación de RA en la LAN (somos el router)
  ansible.builtin.sysctl:
    name: "net.ipv6.conf.{{ interface }}.accept_ra"
    value: '0'
    state: present
    reload: yes
  become: yes

# =========================
# Red (ifupdown + runtime)
# =========================
- name: Renderizar /etc/network/interfaces (no cortar SSH)
  ansible.builtin.template:
    src: interfaces.j2
    dest: /etc/network/interfaces
    owner: root
    group: root
    mode: '0644'
    backup: yes
  notify: Reload networking
  become: yes

- name: Comprobar si ya está asignada la IPv6 en {{ interface }}
  ansible.builtin.command: bash -lc "ip -6 addr show {{ interface }} | grep -q '\\b{{ ipv6_address | regex_escape }}\\b'"
  register: has_ip
  changed_when: false
  failed_when: false

- name: Asignar IPv6 en {{ interface }} (runtime, idempotente)
  ansible.builtin.shell: |
    ip -6 addr add {{ ipv6_address }}/{{ ipv6_prefix }} dev {{ interface }} 2>/dev/null || true
    ip link set {{ interface }} up
  when: has_ip.rc != 0
  become: yes

# =========================
# radvd (RA) + DHCPv6
# =========================
- name: Configurar radvd (Router Advertisements)
  ansible.builtin.template:
    src: radvd.conf.j2
    dest: /etc/radvd.conf
    owner: root
    group: root
    mode: '0644'
  notify: restart radvd
  become: yes

- name: Configurar DHCPv6 (ISC)
  ansible.builtin.template:
    src: dhcpd6.conf.j2
    dest: /etc/dhcp/dhcpd6.conf
    owner: root
    group: root
    mode: '0644'
  notify: restart isc-dhcp-server6
  become: yes

- name: Ligar DHCPv6 a la interfaz LAN
  ansible.builtin.lineinfile:
    path: /etc/default/isc-dhcp-server
    regexp: '^INTERFACESv6='
    line: 'INTERFACESv6="{{ interface }}"'
    create: yes
  notify: restart isc-dhcp-server6
  become: yes

# =========================
# Firewall nftables
# =========================
- name: Configurar nftables (permitir ICMPv6 imprescindible)
  ansible.builtin.template:
    src: nftables.conf.j2
    dest: /etc/nftables.conf
    owner: root
    group: root
    mode: '0644'
  notify: restart nftables
  become: yes

# =========================
# Servicios arriba
# =========================
- name: Asegurar servicios habilitados y arrancados
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: yes
    state: started
  loop:
    - radvd
    - isc-dhcp-server6
    - nftables
  become: yes

# =========================
# Verificación / Evidencia
# =========================
- name: Verificar configuración IPv6
  ansible.builtin.command: ip -6 addr show {{ interface }}
  register: ipv6_config
  changed_when: false

- name: Verificar estado de radvd
  ansible.builtin.command: systemctl status radvd --no-pager
  register: radvd_status
  changed_when: false
  failed_when: false

- name: Verificar estado de DHCPv6
  ansible.builtin.command: systemctl status isc-dhcp-server6 --no-pager
  register: dhcpv6_status
  changed_when: false
  failed_when: false

- name: Mostrar configuración completa
  ansible.builtin.debug:
    msg:
      - "=================================================="
      - "  ✓ Debian Router IPv6 Configurado"
      - "=================================================="
      - "Red: 2025:DB8:101::/64"
      - "Gateway: {{ ipv6_address }}/{{ ipv6_prefix }}"
      - "Interface: {{ interface }}"
      - "Servicios:"
      - "  • radvd: {{ 'ACTIVO ✓' if radvd_status.rc == 0 else 'INACTIVO ✗' }}"
      - "  • DHCPv6: {{ 'ACTIVO ✓' if dhcpv6_status.rc == 0 else 'INACTIVO ✗' }}"
      - "  • IPv6 Forwarding: HABILITADO ✓"
      - "Pool: {{ dhcpv6_range_start }} - {{ dhcpv6_range_end }}"
      - "DNS: {{ dhcpv6_dns_servers | join(', ') }}"
      - "=================================================="
